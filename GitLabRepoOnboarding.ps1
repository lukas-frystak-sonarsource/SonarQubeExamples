# This script was tested on SonarQube 9.9.4

# Constants / Inputs
#   sqUrl:
#     The URL of the SonarQube instance
#   AUTH:
#     For curl, the value must be 'SonarQube user token' plus a colon.
#     https://docs.sonarsource.com/sonarqube/9.9/extension-guide/web-api/#user-token
#     The token must belong to a user who can create projects.
#     After the project is created, the user must have the permission to administer the project.
#   sonarqubeAlmSetting:
#     The SonarQube ALM setting parameter corresponds to the "Configuration name" configured in SonarQube
#     for the GitLab integration. The parameter can be viewed on the Administration page -> Configuration
#     -> General settings -> DevOps platform integrations -> GitLab -> Configuration name.
#     This script assumes that all repositories are within one GitLab organization (i.e., accessible by a
#     single GitLab integration.)
#   projectKeys:
#     This script can iterate over a list of GitLab repository names/paths. This is "path" in GitLab repos:
#     https://docs.gitlab.com/ee/api/projects.html#list-all-projects
$sqUrl = "http://localhost:9000/"
$AUTH = "<SQ_USER_TOKEN>:"
$sonarqubeAlmSetting = "MyGitlabCom"
$projectKeys = @("api-testproject-045", "onemoretest")

foreach ($projectKey in $projectKeys) {
    Write-Host -ForegroundColor Cyan "Project provisioning step for GitLab repo ""$projectKey"""

    # Use SonarQube GitLab integration feature (Create project -> from GitLab in SonarQube UI) to find the GitLab project/repository.
    $url = $sqUrl + "api/alm_integrations/search_gitlab_repos?p=1&ps=30&almSetting=$sonarqubeAlmSetting&projectName=$projectKey"
    $gitReposAvailableInSq = $(curl -su $AUTH $url | ConvertFrom-Json).Repositories
    $requiredRepo = $gitReposAvailableInSq | Where-Object { $_.Slug -eq $projectKey }

    # Onboard the project to SonarQube if it doesn't exist yet.
    if ($null -eq $requiredRepo.sqProjectKey) {
        Write-Host -ForegroundColor Green "Creating new project..."

        # Construct the project key required in SonarQube. I am not doing anything special here.
        $requiredProjectKey = $projectKey

        # Onboard the repository into SonarQube.
        $url = $sqUrl + "api/alm_integrations/import_gitlab_project"
        $createdProject = $(curl -su $AUTH $url -d "almSetting=$sonarqubeAlmSetting" -d "gitlabProjectId=$($requiredRepo.Id)") | ConvertFrom-Json

        # Change the project's projectKey from the on generated by SonarQube to the one we want
        # Note:
        #  Onboarding the project with the GitLab API doesn't guarantee that the project doesn't exist in SonarQube.
        #  Therefore, the following operation - changing the project's key - could fail with an error if the project
        #  already exists. This should be handled and the project we just provisioned should be deleted.
        $url = $sqUrl + "api/projects/update_key"
        curl -u $AUTH $url -d "from=$($createdProject.project.key)" -d "to=$requiredProjectKey"
    
        # Add a GitLab link to the SonarQube project
        $url = $sqUrl + "api/project_links/create"
        $link = curl -su $AUTH $url -d "projectKey=$requiredProjectKey" -d "name=GitLabProject" -d "url=$($requiredRepo.url)" | ConvertFrom-Json

        # Other manipulations of the created project
        # ... Permissions
        # ... Etc.
    }
    else {
        Write-Host -ForegroundColor Green "Project ""$projectKey"" already exists. See $($sqUrl)dashboard?id=$projectKey"
    }
}
